import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Updater, Dispatcher, CallbackContext, ConversationHandler, CommandHandler,
    MessageHandler, Filters, CallbackQueryHandler
)
from dotenv import load_dotenv
import sys
from datetime import datetime, timedelta
from pyairtable import Api
from .gpt_assistant import get_health_assistant_response
import re

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from database.models import init_db, User, get_session
from bot.handlers import (
    start, gender, age, height, weight, main_goal, additional_goal,
    work_format, sport_frequency, payment, handle_menu_callback, cancel, clear,
    handle_text_messages, health_assistant_button, handle_health_assistant_message, back_to_main_menu,
    reload_config, get_bot_config, apply_bot_config, bot_info,
    GENDER, AGE, HEIGHT, WEIGHT, MAIN_GOAL, ADDITIONAL_GOAL,
    WORK_FORMAT, SPORT_FREQUENCY, PAYMENT, SUPPORT_OPTIONS
)

# –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–ª–æ–≥–µ—Ä–æ–≤
from api_patch import track_referral_click

# –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def process_blogger_referral(update: Update, context: CallbackContext) -> bool:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –±–ª–æ–≥–µ—Ä–∞"""
    user_id = update.effective_user.id
    message_text = update.message.text if update.message else None
    
    if message_text and message_text.startswith('/start ref_'):
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
            ref_code = message_text.replace('/start ', '')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–æ—Ä–º–∞—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –±–ª–æ–≥–µ—Ä–∞
            if ref_code.startswith('ref_'):
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–µ—Ä–µ—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –±–ª–æ–≥–µ—Ä–∞: {ref_code}")
                
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
                username = update.effective_user.username or f"user_{user_id}"
                success, result = track_referral_click(ref_code, user_id, username)
                
                if success:
                    logger.info(f"–£—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª–∏–∫ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –±–ª–æ–≥–µ—Ä–∞: {result}")
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    user_data = context.user_data
                    user_data['blogger_ref_code'] = ref_code
                    
                    return True
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–∫–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ: {result}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –±–ª–æ–≥–µ—Ä–∞: {str(e)}")
    
    return False

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é start –∏–∑ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è
def start_wrapper(update: Update, context: CallbackContext) -> int:
    """–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ start —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–ª–æ–≥–µ—Ä–æ–≤"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –±–ª–æ–≥–µ—Ä–∞
    process_blogger_referral(update, context)
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é start
    return start(update, context)

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("BOT_TOKEN")
    if not token:
        logger.error("–ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        exit(1)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Updater
    updater = Updater(token)
    dispatcher = updater.dispatcher
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("start", start_wrapper),  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –æ–±–µ—Ä—Ç–∫—É –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ start
            CommandHandler("survey", start_survey),
            MessageHandler(Filters.regex(r'^–ü–æ–¥–æ–±—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É$'), start_survey),
            CallbackQueryHandler(start_survey, pattern='^start_survey$')
        ],
        states={
            GENDER: [CallbackQueryHandler(gender, pattern='^(male|female)$')],
            AGE: [MessageHandler(Filters.text & ~Filters.command, age)],
            HEIGHT: [MessageHandler(Filters.text & ~Filters.command, height)],
            WEIGHT: [MessageHandler(Filters.text & ~Filters.command, weight)],
            MAIN_GOAL: [CallbackQueryHandler(main_goal)],
            ADDITIONAL_GOAL: [CallbackQueryHandler(additional_goal)],
            WORK_FORMAT: [CallbackQueryHandler(work_format)],
            SPORT_FREQUENCY: [CallbackQueryHandler(sport_frequency)],
            PAYMENT: [CallbackQueryHandler(payment)],
            SUPPORT_OPTIONS: [CallbackQueryHandler(handle_menu_callback)]
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        per_message=True,
        name="survey_conversation"
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dispatcher.add_handler(conv_handler)
    dispatcher.add_handler(CallbackQueryHandler(handle_menu_callback))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    dispatcher.add_handler(MessageHandler(
        Filters.regex('^Health –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç$'), 
        health_assistant_button
    ))
    
    dispatcher.add_handler(MessageHandler(
        Filters.regex('^–ù–∞–∑–∞–¥$'), 
        back_to_main_menu
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –∏ Health –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    menu_filter = (
        Filters.regex('^–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π$') | 
        Filters.regex('^–°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π$') |
        Filters.regex('^–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞$') |
        Filters.regex('^–ú–µ–Ω—é ‚úÖ$') |
        Filters.regex('^üòä –ê–Ω–µ–∫–¥–æ—Ç$')
    )
    
    dispatcher.add_handler(MessageHandler(
        menu_filter & ~Filters.command, 
        handle_text_messages
    ))
    
    # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–¥—É—Ç –≤ Health –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
    dispatcher.add_handler(MessageHandler(
        Filters.text & ~Filters.command & ~menu_filter & ~Filters.regex('^–ù–∞–∑–∞–¥$') & ~Filters.regex('^Health –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç$'),
        handle_health_assistant_message
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /clear –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    dispatcher.add_handler(CommandHandler("clear", clear))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /reload_config –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    dispatcher.add_handler(CommandHandler("reload_config", reload_config))
    logger.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /reload_config")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
    dispatcher.add_handler(CommandHandler("info", bot_info))
    dispatcher.add_handler(CommandHandler("about", bot_info))
    logger.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã /info –∏ /about")
    
    # –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞
    logger.info("–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞")
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    try:
        logger.info("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        config = get_bot_config()
        applied_settings = apply_bot_config(updater.bot, config)
        logger.info(f"–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞: {applied_settings}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
